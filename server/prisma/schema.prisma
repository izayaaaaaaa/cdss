generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  UserID    Int     @id @default(autoincrement())
  LicenseNo String  @unique
  Password  String
  UserType  String
  Doctor    Doctor?
  Nurse     Nurse?

  @@map(name: "users")
}

model Doctor {
  ProfileID    Int       @id @default(autoincrement())
  UserID       Int       @unique
  Name         String
  Age          Int
  Gender       String
  PhoneNumber  String
  EmailAddress String
  User         User      @relation(fields: [UserID], references: [UserID])
  Patient      Patient[]
  Availability Boolean   @default(true)

  @@map(name: "doctors")
}

model Nurse {
  ProfileID    Int       @id @default(autoincrement())
  UserID       Int       @unique
  Name         String
  Age          Int
  Gender       String
  PhoneNumber  String
  EmailAddress String
  User         User      @relation(fields: [UserID], references: [UserID])
  Patient      Patient[]
  Availability Boolean   @default(true)

  @@map(name: "nurses")
}

model Patient {
  ProfileID                 Int          @id @default(autoincrement())
  Name                      String
  Age                       Int
  Gender                    String
  PhoneNumber               String
  EmailAddress              String
  ChiefComplaint            String
  MedicalHistory            String
  OutpatientAdmissionStatus Boolean?
  Date_Admitted             DateTime?
  AssignedRoomNumber        Int?
  BedNumber                 Int?
  PhysicianInCharge         Int?
  NurseNotes                String?
  FlowChart                 String?
  NurseProfileID            Int?
  DoctorInCharge            Doctor?      @relation(fields: [PhysicianInCharge], references: [ProfileID])
  NurseInCharge             Nurse?       @relation(fields: [NurseProfileID], references: [ProfileID])
  VitalSigns                VitalSigns[]
  ADPIE                     ADPIE[]

  @@map(name: "patients")
}

model VitalSigns {
  VitalSignID      Int      @id @default(autoincrement())
  PatientID        Int
  DateTime         DateTime
  Temperature      Float
  BloodPressure    String
  PulseRate        Int
  OxygenSaturation Int
  PainScale        Int
  Patient          Patient  @relation(fields: [PatientID], references: [ProfileID])

  @@map(name: "vital_signs")
}

model ADPIE {
  ADPIEID                    Int          @id @default(autoincrement())
  PatientID                  Int
  Diagnosis                  String
  Planning                   String
  InterventionImplementation String
  Evaluation                 String
  Patient                    Patient      @relation(fields: [PatientID], references: [ProfileID])
  Assessment                 Assessment[]

  @@map(name: "adpie")
}

model Assessment {
  ADPIEID                 Int                   @id @default(autoincrement())
  HealthHistory           String
  ChiefComplaint          String
  HistoryOfPresentIllness String
  PastMedicalHistory      String
  SocialHistory           String
  NurseNotes              String
  ADPIE                   ADPIE                 @relation(fields: [ADPIEID], references: [ADPIEID])
  LaboratoryTests         LaboratoryTest[]
  PhysicalExaminations    PhysicalExamination[]
  DiagnosticTests         DiagnosticTest[]
  ImagingStudies          ImagingStudy[]

  @@map(name: "assessments")
}

model LaboratoryTest {
  TestID      Int        @id @default(autoincrement())
  ADPIEID     Int
  TestName    String
  TestResult  String
  MediaURL    String
  Description String
  Assessment  Assessment @relation(fields: [ADPIEID], references: [ADPIEID])

  @@map(name: "laboratory_tests")
}

model PhysicalExamination {
  ExaminationID   Int        @id @default(autoincrement())
  ADPIEID         Int
  ExaminationName String
  Findings        String
  MediaURL        String
  Description     String
  Assessment      Assessment @relation(fields: [ADPIEID], references: [ADPIEID])

  @@map(name: "physical_examinations")
}

model DiagnosticTest {
  DiagnosticTestID Int        @id @default(autoincrement())
  ADPIEID          Int
  TestName         String
  TestResult       String
  MediaURL         String
  Description      String
  Assessment       Assessment @relation(fields: [ADPIEID], references: [ADPIEID])

  @@map(name: "diagnostic_tests")
}

model ImagingStudy {
  ImagingStudyID Int        @id @default(autoincrement())
  ADPIEID        Int
  StudyName      String
  Findings       String
  MediaURL       String
  Description    String
  Assessment     Assessment @relation(fields: [ADPIEID], references: [ADPIEID])

  @@map(name: "imaging_studies")
}
